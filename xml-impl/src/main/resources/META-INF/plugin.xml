<consulo-plugin url="https://github.com/consulo/consulo-xml">
	<id>com.intellij.xml</id>
	<name>XML/HTML</name>
	<version>SNAPSHOT</version>
	<category>Custom Languages</category>
	<tags>
		<tag>custom.language</tag>
		<tag>markup.language</tag>
	</tags>

	<depends optional="true">com.intellij.spellchecker</depends>

	<import path="/META-INF/XmlDom.xml" />
	<import path="/META-INF/relaxng-plugin.xml" />

	<actions>

		<group id="ToolsXmlGroup" popup="true" class="com.intellij.xml.actions.XmlActionsGroup">
			<action id="ValidateXml" class="com.intellij.xml.actions.validate.ValidateXmlAction"/>
			<action id="GenerateDTD" class="consulo.xml.codeInsight.actions.GenerateDTDAction"/>
			<action id="XSD2Document" class="com.intellij.xml.actions.xmlbeans.GenerateSchemaFromInstanceDocumentAction"
					text="Generate XSD Schema from XML File..."/>
			<action id="Document2XSD" class="com.intellij.xml.actions.xmlbeans.GenerateInstanceDocumentFromSchemaAction"
					text="Generate XML Document from XSD Schema..."/>
			<separator/>

			<add-to-group group-id="ToolsMenu" anchor="before" relative-to-action="ExternalToolsGroup"/>
		</group>

		<action id="EscapeEntities" class="com.intellij.xml.actions.EscapeEntitiesAction"
				text="Encode XML/HTML Special Characters"
				description="Escape XML/HTML special characters with entities">
			<add-to-group group-id="EditMenu" anchor="last"/>
		</action>

		<action id="ConvertSchemaAction" class="org.intellij.plugins.relaxNG.convert.ConvertSchemaAction"
				text="Convert Schema..."
				description="Converts the selected Schema document (RNG, RNC, XSD, DTD) into another format">
			<add-to-group group-id="ToolsXmlGroup" anchor="after" relative-to-action="GenerateDTD"/>
		</action>

		<group id="XmlGenerateToolsGroup">
			<separator/>
			<reference ref="GenerateDTD"/>
			<reference ref="XSD2Document"/>
			<reference ref="Document2XSD"/>
			<separator/>
			<add-to-group group-id="EditorPopupMenu" anchor="last"/>
			<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
		</group>

		<reference ref="ValidateXml">
			<add-to-group group-id="EditorPopupMenu.Run" anchor="last"/>
			<add-to-group group-id="ProjectViewPopupMenuRefactoringGroup" anchor="last"/>
			<add-to-group group-id="EditorTabPopupMenuEx" anchor="last"/>
		</reference>


		<group id="NewXml" text="XML">
			<action id="NewHtmlFile" class="consulo.xml.ide.actions.CreateHtmlFileAction"/>
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
		</group>

		<group id="NewXmlDescriptor" class="consulo.ui.ex.action.NonEmptyActionGroup" text="XML Configuration File" popup="true"
			   icon="consulo.platform.base.PlatformIconGroup@filetypes.xml">
			<add-to-group group-id="NewGroup" anchor="last"/>
		</group>

		<action id="GenerateXmlTag" class="com.intellij.xml.actions.GenerateXmlTagAction"
				text="XML Tag..."
				description="Generate a new XML tag according to schema information">
			<add-to-group group-id="GenerateGroup" anchor="first"/>
		</action>
	</actions>


	<extensions defaultExtensionNs="consulo">

		<stubElementTypeHolder class="consulo.xml.util.xml.stubs.DomElementTypeHolder"/>

		<patterns.patternClass className="consulo.xml.patterns.XmlPatterns" alias="xml"/>



		<localInspection language="XML" bundle="messages.XmlBundle" key="xml.inspections.duplicate.id"
						 groupKey="xml.inspections.group.name" enabledByDefault="true" level="ERROR" runForWholeFile="true" unfair="true"
						 implementationClass="com.intellij.xml.util.XmlDuplicatedIdInspection"/>
		<localInspection language="XML" bundle="messages.XmlBundle" key="xml.inspections.invalid.id"
						 groupKey="xml.inspections.group.name" enabledByDefault="true" level="ERROR" runForWholeFile="true" unfair="true"
						 implementationClass="com.intellij.xml.util.XmlInvalidIdInspection"/>

		<localInspection language="XML" shortName="RequiredAttributes" bundle="messages.XmlBundle"
						 key="inspection.required.attributes.display.name"
						 groupName="HTML" enabledByDefault="true" level="WARNING"
						 implementationClass="consulo.xml.codeInspection.htmlInspections.RequiredAttributesInspection" unfair="true"/>

		<localInspection language="XML" shortName="XmlWrongRootElement" bundle="messages.XmlBundle" key="xml.inspection.wrong.root.element"
						 groupName="XML"
						 enabledByDefault="true" level="ERROR"
						 implementationClass="consulo.xml.codeInspection.htmlInspections.XmlWrongRootElementInspection"/>

		<localInspection language="XML" shortName="HtmlUnknownAttribute" bundle="messages.XmlBundle" key="html.inspections.unknown.attribute"
						 groupName="HTML"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="consulo.xml.codeInspection.htmlInspections.HtmlUnknownAttributeInspection"/>



		<localInspection language="XML" implementationClass="consulo.xml.codeInsight.daemon.impl.analysis.XmlPathReferenceInspection"
						 displayName="File path resolving in XML"
						 groupName="XML" enabledByDefault="true" level="ERROR"/>
		<localInspection language="XML" shortName="HtmlUnknownTarget" bundle="messages.XmlBundle" key="html.inspections.unknown.target"
						 groupName="HTML"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="consulo.xml.codeInsight.daemon.impl.analysis.HtmlUnknownTargetInspection"/>
		<localInspection language="XML" shortName="HtmlUnknownAnchorTarget" bundle="messages.XmlBundle" key="html.inspections.unknown.anchor"
						 groupName="HTML"
						 enabledByDefault="true" level="WARNING"
						 implementationClass="consulo.xml.codeInsight.daemon.impl.analysis.HtmlUnknownAnchorTargetInspection"/>
	</extensions>
</consulo-plugin>